{"ast":null,"code":"function BitBuffer() {\n  this.buffer = [];\n  this.length = 0;\n}\n\nBitBuffer.prototype = {\n  get: function get(index) {\n    var bufIndex = Math.floor(index / 8);\n    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) === 1;\n  },\n  put: function put(num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit((num >>> length - i - 1 & 1) === 1);\n    }\n  },\n  getLengthInBits: function getLengthInBits() {\n    return this.length;\n  },\n  putBit: function putBit(bit) {\n    var bufIndex = Math.floor(this.length / 8);\n\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n\n    this.length++;\n  }\n};\nmodule.exports = BitBuffer;","map":{"version":3,"sources":["C:/Users/asus/Desktop/新建文件夹/SPH-zp/node_modules/qrcode/lib/core/bit-buffer.js"],"names":["BitBuffer","buffer","length","prototype","get","index","bufIndex","Math","floor","put","num","i","putBit","getLengthInBits","bit","push","module","exports"],"mappings":"AAAA,SAASA,SAAT,GAAsB;AACpB,OAAKC,MAAL,GAAc,EAAd;AACA,OAAKC,MAAL,GAAc,CAAd;AACD;;AAEDF,SAAS,CAACG,SAAV,GAAsB;AAEpBC,EAAAA,GAAG,EAAE,aAAUC,KAAV,EAAiB;AACpB,QAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,CAAnB,CAAjB;AACA,WAAO,CAAE,KAAKJ,MAAL,CAAYK,QAAZ,MAA2B,IAAID,KAAK,GAAG,CAAxC,GAA8C,CAA/C,MAAsD,CAA7D;AACD,GALmB;AAOpBI,EAAAA,GAAG,EAAE,aAAUC,GAAV,EAAeR,MAAf,EAAuB;AAC1B,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,MAApB,EAA4BS,CAAC,EAA7B,EAAiC;AAC/B,WAAKC,MAAL,CAAY,CAAEF,GAAG,KAAMR,MAAM,GAAGS,CAAT,GAAa,CAAvB,GAA6B,CAA9B,MAAqC,CAAjD;AACD;AACF,GAXmB;AAapBE,EAAAA,eAAe,EAAE,2BAAY;AAC3B,WAAO,KAAKX,MAAZ;AACD,GAfmB;AAiBpBU,EAAAA,MAAM,EAAE,gBAAUE,GAAV,EAAe;AACrB,QAAMR,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKN,MAAL,GAAc,CAAzB,CAAjB;;AACA,QAAI,KAAKD,MAAL,CAAYC,MAAZ,IAAsBI,QAA1B,EAAoC;AAClC,WAAKL,MAAL,CAAYc,IAAZ,CAAiB,CAAjB;AACD;;AAED,QAAID,GAAJ,EAAS;AACP,WAAKb,MAAL,CAAYK,QAAZ,KAA0B,SAAU,KAAKJ,MAAL,GAAc,CAAlD;AACD;;AAED,SAAKA,MAAL;AACD;AA5BmB,CAAtB;AA+BAc,MAAM,CAACC,OAAP,GAAiBjB,SAAjB","sourcesContent":["function BitBuffer () {\r\n  this.buffer = []\r\n  this.length = 0\r\n}\r\n\r\nBitBuffer.prototype = {\r\n\r\n  get: function (index) {\r\n    const bufIndex = Math.floor(index / 8)\r\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\r\n  },\r\n\r\n  put: function (num, length) {\r\n    for (let i = 0; i < length; i++) {\r\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\r\n    }\r\n  },\r\n\r\n  getLengthInBits: function () {\r\n    return this.length\r\n  },\r\n\r\n  putBit: function (bit) {\r\n    const bufIndex = Math.floor(this.length / 8)\r\n    if (this.buffer.length <= bufIndex) {\r\n      this.buffer.push(0)\r\n    }\r\n\r\n    if (bit) {\r\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\r\n    }\r\n\r\n    this.length++\r\n  }\r\n}\r\n\r\nmodule.exports = BitBuffer\r\n"]},"metadata":{},"sourceType":"script"}